{"version":3,"sources":["../../../src/plugins/Dashboard/FileCard.js"],"names":["getFileTypeIcon","require","checkIcon","module","exports","fileCard","props","file","fileCardFor","files","meta","tempStoreMeta","ev","value","target","name","attributes","renderMetaFields","metaFields","map","field","id","placeholder","done","preview","type","general","specific","color","icon"],"mappings":";;;;AACA,IAAMA,kBAAkBC,QAAQ,mBAAR,CAAxB;;eACsBA,QAAQ,SAAR,C;IAAdC,S,YAAAA,S;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACzC,MAAMC,OAAOD,MAAME,WAAN,GAAoBF,MAAMG,KAAN,CAAYH,MAAME,WAAlB,CAApB,GAAqD,KAAlE;AACA,MAAME,OAAO,EAAb;;AAEA,WAASC,aAAT,CAAwBC,EAAxB,EAA4B;AAC1B,QAAMC,QAAQD,GAAGE,MAAH,CAAUD,KAAxB;AACA,QAAME,OAAOH,GAAGE,MAAH,CAAUE,UAAV,CAAqBD,IAArB,CAA0BF,KAAvC;AACAH,SAAKK,IAAL,IAAaF,KAAb;AACD;;AAED,WAASI,gBAAT,CAA2BV,IAA3B,EAAiC;AAC/B,QAAMW,aAAaZ,MAAMY,UAAN,IAAoB,EAAvC;AACA,WAAOA,WAAWC,GAAX,CAAe,UAACC,KAAD,EAAW;AAAA;;AAC/B,0ZAC+CA,MAAML,IADrD,oKAGiBK,MAAMC,EAHvB,iIAKkBd,KAAKG,IAAL,CAAUU,MAAMC,EAAhB,CALlB,6EAMwBD,MAAME,WAAN,IAAqB,EAN7C,+CAOmBX,aAPnB;AAQD,KATM,CAAP;AAUD;;AAED,gIAA8D,CAACL,MAAME,WAArE,yrBAEkGD,KAAKG,IAAL,GAAYH,KAAKG,IAAL,CAAUK,IAAtB,GAA6BR,KAAKQ,IAFpI,oPAIsB;AAAA,WAAMT,MAAMiB,IAAN,CAAWb,IAAX,EAAiBH,KAAKc,EAAtB,CAAN;AAAA,GAJtB,mMAMIf,MAAME,WAAN,2YAGQD,KAAKiB,OAAL,+EACmBjB,KAAKQ,IADxB,8CACsCR,KAAKiB,OAD3C,wJAEkExB,gBAAgBO,KAAKkB,IAAL,CAAUC,OAA1B,EAAmCnB,KAAKkB,IAAL,CAAUE,QAA7C,EAAuDC,KAFzH,iJAGM5B,gBAAgBO,KAAKkB,IAAL,CAAUC,OAA1B,EAAmCnB,KAAKkB,IAAL,CAAUE,QAA7C,EAAuDE,IAH7D,uCAHR,+5BAaoFtB,KAAKG,IAAL,CAAUK,IAb9F,gDAcyBJ,aAdzB,kKAgBQM,iBAAiBV,IAAjB,CAhBR,4EAmBE,IAzBN,4XA+BsB;AAAA,WAAMD,MAAMiB,IAAN,CAAWb,IAAX,EAAiBH,KAAKc,EAAtB,CAAN;AAAA,GA/BtB,oJA+ByDnB,WA/BzD;AAkCD,CA1DD","file":"FileCard.js","sourcesContent":["const html = require('yo-yo')\nconst getFileTypeIcon = require('./getFileTypeIcon')\nconst { checkIcon } = require('./icons')\n\n// function getIconByMime (fileTypeGeneral) {\n//   switch (fileTypeGeneral) {\n//     case 'text':\n//       return iconText()\n//     case 'audio':\n//       return iconAudio()\n//     default:\n//       return iconFile()\n//   }\n// }\n\nmodule.exports = function fileCard (props) {\n  const file = props.fileCardFor ? props.files[props.fileCardFor] : false\n  const meta = {}\n\n  function tempStoreMeta (ev) {\n    const value = ev.target.value\n    const name = ev.target.attributes.name.value\n    meta[name] = value\n  }\n\n  function renderMetaFields (file) {\n    const metaFields = props.metaFields || []\n    return metaFields.map((field) => {\n      return html`<fieldset class=\"UppyDashboardFileCard-fieldset\">\n        <label class=\"UppyDashboardFileCard-label\">${field.name}</label>\n        <input class=\"UppyDashboardFileCard-input\"\n               name=\"${field.id}\"\n               type=\"text\"\n               value=\"${file.meta[field.id]}\"\n               placeholder=\"${field.placeholder || ''}\"\n               onkeyup=${tempStoreMeta} /></fieldset>`\n    })\n  }\n\n  return html`<div class=\"UppyDashboardFileCard\" aria-hidden=\"${!props.fileCardFor}\">\n    <div class=\"UppyDashboardContent-bar\">\n      <h2 class=\"UppyDashboardContent-title\">Editing <span class=\"UppyDashboardContent-titleFile\">${file.meta ? file.meta.name : file.name}</span></h2>\n      <button class=\"UppyDashboardContent-back\" title=\"Finish editing file\"\n              onclick=${() => props.done(meta, file.id)}>Done</button>\n    </div>\n    ${props.fileCardFor\n      ? html`<div class=\"UppyDashboardFileCard-inner\">\n          <div class=\"UppyDashboardFileCard-preview\">\n            ${file.preview\n              ? html`<img alt=\"${file.name}\" src=\"${file.preview}\">`\n              : html`<div class=\"UppyDashboardItem-previewIcon\" style=\"color: ${getFileTypeIcon(file.type.general, file.type.specific).color}\">\n                  ${getFileTypeIcon(file.type.general, file.type.specific).icon}\n                </div>`\n            }\n          </div>\n          <div class=\"UppyDashboardFileCard-info\">\n            <fieldset class=\"UppyDashboardFileCard-fieldset\">\n              <label class=\"UppyDashboardFileCard-label\">Name</label>\n              <input class=\"UppyDashboardFileCard-input\" name=\"name\" type=\"text\" value=\"${file.meta.name}\"\n                     onkeyup=${tempStoreMeta} />\n            </fieldset>\n            ${renderMetaFields(file)}\n          </div>\n        </div>`\n      : null\n    }\n    <div class=\"UppyDashboard-actions\">\n      <button class=\"UppyButton--circular UppyButton--blue UppyDashboardFileCard-done\"\n              type=\"button\"\n              title=\"Finish editing file\"\n              onclick=${() => props.done(meta, file.id)}>${checkIcon()}</button>\n    </div>\n    </div>`\n}\n"]}