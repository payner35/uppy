{"version":3,"sources":["../../src/core/Core.js"],"names":["Utils","require","Translator","UppySocket","ee","throttle","Uppy","opts","defaultOptions","autoProceed","debug","plugins","translator","locale","i18n","translate","bind","getState","updateMeta","initSocket","log","addFile","calculateProgress","bus","emitter","on","emit","preProcessors","uploaders","postProcessors","state","files","capabilities","resumableUploads","totalProgress","updateNum","global","UppyState","uppyLog","UppyAddFile","_Uppy","updateAll","Object","keys","forEach","pluginType","plugin","update","setState","stateUpdate","newState","addPreProcessor","fn","push","removePreProcessor","i","indexOf","splice","addPostProcessor","removePostProcessor","addUploader","removeUploader","data","fileID","updatedFiles","newMeta","meta","file","fileName","name","fileType","getFileType","fileTypeGeneral","fileTypeSpecific","fileExtension","getFileNameAndExtension","isRemote","generateFileID","newFile","source","id","extension","type","general","specific","progress","percentage","uploadComplete","uploadStarted","size","remote","preview","getThumbnail","upload","catch","err","console","error","stack","message","removeFile","calculateTotalProgress","updatedFile","bytesUploaded","bytesTotal","Math","floor","toFixed","inProgress","filter","progressMax","length","progressAll","actions","Date","now","throttledCalculateProgress","leading","trailing","uploadResp","uploadURL","completeFiles","window","addEventListener","isOnline","setTimeout","status","online","navigator","onLine","wasOffline","use","Plugin","pluginName","Error","existsPluginAlready","getPlugin","msg","install","foundPlugin","iteratePlugins","method","removePlugin","instance","list","uninstall","index","close","socket","dir","run","promise","Promise","resolve","concat","then","module","exports"],"mappings":"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","file":"Core.js","sourcesContent":["const Utils = require('../core/Utils')\nconst Translator = require('../core/Translator')\nconst UppySocket = require('./UppySocket')\nconst ee = require('namespace-emitter')\nconst throttle = require('lodash.throttle')\n// const en_US = require('../locales/en_US')\n// const deepFreeze = require('deep-freeze-strict')\n\n/**\n * Main Uppy core\n *\n * @param {object} opts general options, like locales, to show modal or not to show\n */\nclass Uppy {\n  constructor (opts) {\n    // set default options\n    const defaultOptions = {\n      // load English as the default locale\n      // locale: en_US,\n      autoProceed: true,\n      debug: false\n    }\n\n    // Merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    // // Dictates in what order different plugin types are ran:\n    // this.types = [ 'presetter', 'orchestrator', 'progressindicator',\n    //                 'acquirer', 'modifier', 'uploader', 'presenter', 'debugger']\n\n    // Container for different types of plugins\n    this.plugins = {}\n\n    this.translator = new Translator({locale: this.opts.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n    this.getState = this.getState.bind(this)\n    this.updateMeta = this.updateMeta.bind(this)\n    this.initSocket = this.initSocket.bind(this)\n    this.log = this.log.bind(this)\n    this.addFile = this.addFile.bind(this)\n    this.calculateProgress = this.calculateProgress.bind(this)\n\n    this.bus = this.emitter = ee()\n    this.on = this.bus.on.bind(this.bus)\n    this.emit = this.bus.emit.bind(this.bus)\n\n    this.preProcessors = []\n    this.uploaders = []\n    this.postProcessors = []\n\n    this.state = {\n      files: {},\n      capabilities: {\n        resumableUploads: false\n      },\n      totalProgress: 0\n    }\n\n    // for debugging and testing\n    this.updateNum = 0\n    if (this.opts.debug) {\n      global.UppyState = this.state\n      global.uppyLog = ''\n      global.UppyAddFile = this.addFile.bind(this)\n      global._Uppy = this\n    }\n  }\n\n  /**\n   * Iterate on all plugins and run `update` on them. Called each time state changes\n   *\n   */\n  updateAll (state) {\n    Object.keys(this.plugins).forEach((pluginType) => {\n      this.plugins[pluginType].forEach((plugin) => {\n        plugin.update(state)\n      })\n    })\n  }\n\n  /**\n   * Updates state\n   *\n   * @param {newState} object\n   */\n  setState (stateUpdate) {\n    const newState = Object.assign({}, this.state, stateUpdate)\n    this.emit('core:state-update', this.state, newState, stateUpdate)\n\n    this.state = newState\n    this.updateAll(this.state)\n  }\n\n  /**\n   * Returns current state\n   *\n   */\n  getState () {\n    // use deepFreeze for debugging\n    // return deepFreeze(this.state)\n    return this.state\n  }\n\n  addPreProcessor (fn) {\n    this.preProcessors.push(fn)\n  }\n\n  removePreProcessor (fn) {\n    const i = this.preProcessors.indexOf(fn)\n    if (i !== -1) {\n      this.preProcessors.splice(i, 1)\n    }\n  }\n\n  addPostProcessor (fn) {\n    this.postProcessors.push(fn)\n  }\n\n  removePostProcessor (fn) {\n    const i = this.postProcessors.indexOf(fn)\n    if (i !== -1) {\n      this.postProcessors.splice(i, 1)\n    }\n  }\n\n  addUploader (fn) {\n    this.uploaders.push(fn)\n  }\n\n  removeUploader (fn) {\n    const i = this.uploaders.indexOf(fn)\n    if (i !== -1) {\n      this.uploaders.splice(i, 1)\n    }\n  }\n\n  updateMeta (data, fileID) {\n    const updatedFiles = Object.assign({}, this.getState().files)\n    const newMeta = Object.assign({}, updatedFiles[fileID].meta, data)\n    updatedFiles[fileID] = Object.assign({}, updatedFiles[fileID], {\n      meta: newMeta\n    })\n    this.setState({files: updatedFiles})\n  }\n\n  addFile (file) {\n    const updatedFiles = Object.assign({}, this.state.files)\n\n    const fileName = file.name || 'noname'\n    const fileType = Utils.getFileType(file)\n    const fileTypeGeneral = fileType[0]\n    const fileTypeSpecific = fileType[1]\n    const fileExtension = Utils.getFileNameAndExtension(fileName)[1]\n    const isRemote = file.isRemote || false\n\n    const fileID = Utils.generateFileID(fileName)\n\n    const newFile = {\n      source: file.source || '',\n      id: fileID,\n      name: fileName,\n      extension: fileExtension || '',\n      meta: {\n        name: fileName\n      },\n      type: {\n        general: fileTypeGeneral,\n        specific: fileTypeSpecific\n      },\n      data: file.data,\n      progress: {\n        percentage: 0,\n        uploadComplete: false,\n        uploadStarted: false\n      },\n      size: file.data.size || 'N/A',\n      isRemote: isRemote,\n      remote: file.remote || '',\n      preview: file.preview\n    }\n\n    if (fileTypeGeneral === 'image' && !isRemote) {\n      newFile.preview = Utils.getThumbnail(file)\n    }\n\n    updatedFiles[fileID] = newFile\n    this.setState({files: updatedFiles})\n\n    this.bus.emit('file-added', fileID)\n    this.log(`Added file: ${fileName}, ${fileID}, mime type: ${fileType}`)\n\n    if (this.opts.autoProceed) {\n      this.upload()\n        .catch((err) => {\n          console.error(err.stack || err.message)\n        })\n      // this.bus.emit('core:upload')\n    }\n  }\n\n  removeFile (fileID) {\n    const updatedFiles = Object.assign({}, this.getState().files)\n    delete updatedFiles[fileID]\n    this.setState({files: updatedFiles})\n    this.calculateTotalProgress()\n    this.log(`Removed file: ${fileID}`)\n  }\n\n  calculateProgress (data) {\n    const fileID = data.id\n    const updatedFiles = Object.assign({}, this.getState().files)\n\n    // skip progress event for a file that’s been removed\n    if (!updatedFiles[fileID]) {\n      this.log('Trying to set progress for a file that’s not with us anymore: ', fileID)\n      return\n    }\n\n    const updatedFile = Object.assign({}, updatedFiles[fileID],\n      Object.assign({}, {\n        progress: Object.assign({}, updatedFiles[fileID].progress, {\n          bytesUploaded: data.bytesUploaded,\n          bytesTotal: data.bytesTotal,\n          percentage: Math.floor((data.bytesUploaded / data.bytesTotal * 100).toFixed(2))\n        })\n      }\n    ))\n    updatedFiles[data.id] = updatedFile\n\n    this.setState({\n      files: updatedFiles\n    })\n\n    this.calculateTotalProgress()\n  }\n\n  calculateTotalProgress () {\n    // calculate total progress, using the number of files currently uploading,\n    // multiplied by 100 and the summ of individual progress of each file\n    const files = Object.assign({}, this.getState().files)\n\n    const inProgress = Object.keys(files).filter((file) => {\n      return files[file].progress.uploadStarted\n    })\n    const progressMax = inProgress.length * 100\n    let progressAll = 0\n    inProgress.forEach((file) => {\n      progressAll = progressAll + files[file].progress.percentage\n    })\n\n    const totalProgress = Math.floor((progressAll * 100 / progressMax).toFixed(2))\n\n    this.setState({\n      totalProgress: totalProgress\n    })\n\n    // if (totalProgress === 100) {\n    //   const completeFiles = Object.keys(updatedFiles).filter((file) => {\n    //     // this should be `uploadComplete`\n    //     return updatedFiles[file].progress.percentage === 100\n    //   })\n    //   this.emit('core:success', completeFiles.length)\n    // }\n  }\n\n  /**\n   * Registers listeners for all global actions, like:\n   * `file-add`, `file-remove`, `upload-progress`, `reset`\n   *\n   */\n  actions () {\n    // this.bus.on('*', (payload) => {\n    //   console.log('emitted: ', this.event)\n    //   console.log('with payload: ', payload)\n    // })\n\n    // stress-test re-rendering\n    // setInterval(() => {\n    //   this.setState({bla: 'bla'})\n    // }, 20)\n\n    this.on('core:file-add', (data) => {\n      this.addFile(data)\n    })\n\n    // `remove-file` removes a file from `state.files`, for example when\n    // a user decides not to upload particular file and clicks a button to remove it\n    this.on('core:file-remove', (fileID) => {\n      this.removeFile(fileID)\n    })\n\n    this.on('core:cancel-all', () => {\n      const files = this.getState().files\n      Object.keys(files).forEach((file) => {\n        this.removeFile(files[file].id)\n      })\n    })\n\n    this.on('core:upload-started', (fileID, upload) => {\n      const updatedFiles = Object.assign({}, this.getState().files)\n      const updatedFile = Object.assign({}, updatedFiles[fileID],\n        Object.assign({}, {\n          progress: Object.assign({}, updatedFiles[fileID].progress, {\n            uploadStarted: Date.now()\n          })\n        }\n      ))\n      updatedFiles[fileID] = updatedFile\n\n      this.setState({files: updatedFiles})\n    })\n\n    // upload progress events can occur frequently, especially when you have a good\n    // connection to the remote server. Therefore, we are throtteling them to\n    // prevent accessive function calls.\n    // see also: https://github.com/tus/tus-js-client/commit/9940f27b2361fd7e10ba58b09b60d82422183bbb\n    const throttledCalculateProgress = throttle(this.calculateProgress, 100, {leading: true, trailing: false})\n\n    this.on('core:upload-progress', (data) => {\n      // this.calculateProgress(data)\n      throttledCalculateProgress(data)\n    })\n\n    this.on('core:upload-success', (fileID, uploadResp, uploadURL) => {\n      const updatedFiles = Object.assign({}, this.getState().files)\n      const updatedFile = Object.assign({}, updatedFiles[fileID], {\n        progress: Object.assign({}, updatedFiles[fileID].progress, {\n          uploadComplete: true,\n          // good or bad idea? setting the percentage to 100 if upload is successful,\n          // so that if we lost some progress events on the way, its still marked “compete”?\n          percentage: 100\n        }),\n        uploadURL: uploadURL\n      })\n      updatedFiles[fileID] = updatedFile\n\n      this.setState({\n        files: updatedFiles\n      })\n\n      this.calculateTotalProgress()\n\n      if (this.getState().totalProgress === 100) {\n        const completeFiles = Object.keys(updatedFiles).filter((file) => {\n          return updatedFiles[file].progress.uploadComplete\n        })\n        this.emit('core:upload-complete', completeFiles.length)\n      }\n    })\n\n    this.on('core:update-meta', (data, fileID) => {\n      this.updateMeta(data, fileID)\n    })\n\n    // show informer if offline\n    if (typeof window !== 'undefined') {\n      window.addEventListener('online', () => this.isOnline(true))\n      window.addEventListener('offline', () => this.isOnline(false))\n      setTimeout(() => this.isOnline(), 3000)\n    }\n  }\n\n  isOnline (status) {\n    const online = status || window.navigator.onLine\n    if (!online) {\n      this.emit('is-offline')\n      this.emit('informer', 'No internet connection', 'error', 0)\n      this.wasOffline = true\n    } else {\n      this.emit('is-online')\n      if (this.wasOffline) {\n        this.emit('back-online')\n        this.emit('informer', 'Connected!', 'success', 3000)\n        this.wasOffline = false\n      }\n    }\n  }\n\n/**\n * Registers a plugin with Core\n *\n * @param {Class} Plugin object\n * @param {Object} options object that will be passed to Plugin later\n * @return {Object} self for chaining\n */\n  use (Plugin, opts) {\n    // Instantiate\n    const plugin = new Plugin(this, opts)\n    const pluginName = plugin.id\n    this.plugins[plugin.type] = this.plugins[plugin.type] || []\n\n    if (!pluginName) {\n      throw new Error('Your plugin must have a name')\n    }\n\n    if (!plugin.type) {\n      throw new Error('Your plugin must have a type')\n    }\n\n    let existsPluginAlready = this.getPlugin(pluginName)\n    if (existsPluginAlready) {\n      let msg = `Already found a plugin named '${existsPluginAlready.name}'.\n        Tried to use: '${pluginName}'.\n        Uppy is currently limited to running one of every plugin.\n        Share your use case with us over at\n        https://github.com/transloadit/uppy/issues/\n        if you want us to reconsider.`\n      throw new Error(msg)\n    }\n\n    this.plugins[plugin.type].push(plugin)\n    plugin.install()\n\n    return this\n  }\n\n/**\n * Find one Plugin by name\n *\n * @param string name description\n */\n  getPlugin (name) {\n    let foundPlugin = false\n    this.iteratePlugins((plugin) => {\n      const pluginName = plugin.id\n      if (pluginName === name) {\n        foundPlugin = plugin\n        return false\n      }\n    })\n    return foundPlugin\n  }\n\n/**\n * Iterate through all `use`d plugins\n *\n * @param function method description\n */\n  iteratePlugins (method) {\n    Object.keys(this.plugins).forEach((pluginType) => {\n      this.plugins[pluginType].forEach(method)\n    })\n  }\n\n  /**\n   * Uninstall and remove a plugin.\n   *\n   * @param {Plugin} instance The plugin instance to remove.\n   */\n  removePlugin (instance) {\n    const list = this.plugins[instance.type]\n\n    if (instance.uninstall) {\n      instance.uninstall()\n    }\n\n    const index = list.indexOf(instance)\n    if (index !== -1) {\n      list.splice(index, 1)\n    }\n  }\n\n  /**\n   * Uninstall all plugins and close down this Uppy instance.\n   */\n  close () {\n    this.iteratePlugins((plugin) => {\n      plugin.uninstall()\n    })\n\n    if (this.socket) {\n      this.socket.close()\n    }\n  }\n\n/**\n * Logs stuff to console, only if `debug` is set to true. Silent in production.\n *\n * @return {String|Object} to log\n */\n  log (msg, type) {\n    if (!this.opts.debug) {\n      return\n    }\n    if (msg === `${msg}`) {\n      console.log(`LOG: ${msg}`)\n    } else {\n      console.dir(msg)\n    }\n\n    if (type === 'error') {\n      console.error(`LOG: ${msg}`)\n    }\n\n    global.uppyLog = global.uppyLog + '\\n' + 'DEBUG LOG: ' + msg\n  }\n\n  initSocket (opts) {\n    if (!this.socket) {\n      this.socket = new UppySocket(opts)\n    }\n\n    return this.socket\n  }\n\n  // installAll () {\n  //   Object.keys(this.plugins).forEach((pluginType) => {\n  //     this.plugins[pluginType].forEach((plugin) => {\n  //       plugin.install(this)\n  //     })\n  //   })\n  // }\n\n/**\n * Initializes actions, installs all plugins (by iterating on them and calling `install`), sets options\n *\n */\n  run () {\n    this.log('Core is run, initializing actions...')\n\n    this.actions()\n\n    // Forse set `autoProceed` option to false if there are multiple selector Plugins active\n    // if (this.plugins.acquirer && this.plugins.acquirer.length > 1) {\n    //   this.opts.autoProceed = false\n    // }\n\n    // Install all plugins\n    // this.installAll()\n\n    return\n  }\n\n  upload () {\n    let promise = Promise.resolve()\n\n    this.emit('core:upload')\n\n    ;[].concat(\n      this.preProcessors,\n      this.uploaders,\n      this.postProcessors\n    ).forEach((fn) => {\n      promise = promise.then(() => fn())\n    })\n\n    // Not returning the `catch`ed promise, because we still want to return a rejected\n    // promise from this method if the upload failed.\n    promise.catch((err) => {\n      this.emit('core:error', err)\n    })\n\n    return promise.then(() => {\n      this.emit('core:success')\n    })\n  }\n}\n\nmodule.exports = function (opts) {\n  if (!(this instanceof Uppy)) {\n    return new Uppy(opts)\n  }\n}\n"]}